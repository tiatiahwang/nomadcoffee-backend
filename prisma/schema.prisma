// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  location String?
  avatarURL String?
  githubUsername String?
  followers User[] @relation("FollowRelation", references: [id])
  following User[] @relation("FollowRelation", references: [id])
  shops CoffeeShop[]
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoffeeShopPhoto {
  id Int @id @default(autoincrement())
  url String
  shop CoffeeShop @relation(fields: [coffeeShopId], references: [id], onDelete: Cascade)
  coffeeShopId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoffeeShop{
  id Int @id @default(autoincrement())
  name String
  latitude String?
  longitude String?
  address String?
  description String?
  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  photo CoffeeShopPhoto[]
  likes     Like[]
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  shops CoffeeShop[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id Int @id @default(autoincrement())
  coffeeShop CoffeeShop  @relation(fields: [coffeeShopId], references: [id])
  user User @relation(fields: [userId], references: [id])  
  coffeeShopId Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([coffeeShopId, userId])
}